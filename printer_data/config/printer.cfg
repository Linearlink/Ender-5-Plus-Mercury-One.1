[include klicky-probe.cfg]

#[include KAMP_Settings.cfg]

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 80

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[include MACROS.cfg]

[printer]
kinematics: corexy #cartesian
max_velocity: 1000
max_accel:  8000 #5000
minimum_cruise_ratio: 0.5
#max_accel_to_decel: 5000
square_corner_velocity: 5 
max_z_velocity: 10
max_z_accel: 100

# Driver0
[stepper_x]
step_pin: PF13
dir_pin: PF12
enable_pin: !PF14
microsteps: 16 #32
rotation_distance: 40
endstop_pin: EBBCan: PB6 #PG9
position_endstop: -14
position_min: -14
position_max: 373 #368
homing_speed: 150
# Driver1
[stepper_y]
step_pin: PG0
dir_pin: PG1
enable_pin: !PF15
microsteps: 16 #32
rotation_distance: 40
endstop_pin: PG6
position_min: -20
position_endstop: -20 #336
position_max: 365 #336
homing_speed: 150
# Driver2
[stepper_z]
step_pin: PG4
dir_pin: !PC1
enable_pin: !PA0
microsteps: 32
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop # Klicky probe Z endstop
position_max: 415 #Rapido HF = 428, UHF = 420
position_min: 0#-5 #set position_min to a negative value such as -5 when probing to set z offset, then revert to 0
homing_speed: 6 #8
# This seems to set the Z home speed
second_homing_speed: 4 #8
# Drive3
[stepper_z1]
step_pin: PF11
dir_pin: !PG3
enable_pin: !PG5
endstop_pin: probe:z_virtual_endstop
microsteps: 32
rotation_distance: 4
# Driver4
[extruder]
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16
rotation_distance: 22.6063774 #22.67895 22.6063774 
full_steps_per_rotation: 200 #1.8deg Motor
gear_ratio: 50:8
nozzle_diameter: 0.400 #0.600
filament_diameter: 1.750
heater_pin: EBBCan: PB13
#sensor_type: MAX31865
sensor_type: PT1000
sensor_pin: EBBCan: PA3
#sensor_type: ATC Semitec 104GT-2
#control: pid
#pid_Kp: 22.2
#pid_Ki: 1.08
#pid_Kd: 114
min_extrude_temp: 165
min_temp: 0
max_temp: 350
pressure_advance: 0.02 #<-eSUN FER-PLA
max_extrude_cross_section: 5
max_extrude_only_distance: 1400.0
max_extrude_only_velocity: 75.0
max_extrude_only_accel: 1500

[z_tilt]
#z_positions:
# A list of X, Y coordinates (one per line; subsequent lines
# indented) describing the location of each bed "pivot point". The
# "pivot point" is the point where the bed attaches to the given Z
# stepper. It is described using nozzle coordinates (the X, Y position
# of the nozzle if it could move directly above the point). The
# first entry corresponds to stepper_z, the second to stepper_z1,
# the third to stepper_z2, etc. This parameter must be provided.
#-90,165
#420,165
##points:
# A list of X, Y coordinates (one per line; subsequent lines
# indented) that should be probed during a Z_TILT_ADJUST command.
# Specify coordinates of the nozzle and be sure the probe is above
# the bed at the given nozzle coordinates. This parameter must be
# provided.
##0,17
##0,327
##220,327
##220,17
##speed: 80
# The speed (in mm/s) of non-probing moves during the calibration.
# The default is 50.
##horizontal_move_z: 10
# The height (in mm) that the head should be commanded to move to
# just prior to starting a probe operation. The default is 5.
##retries: 2
# Number of times to retry if the probed points aren't within
# tolerance.
##retry_tolerance: 0.45
# If retries are enabled then retry if largest and smallest probed
# points differ more than retry_tolerance. Note the smallest unit of
# change here would be a single step. However if you are probing
# more points than steppers then you will likely have a fixed
# minimum value for the range of probed points which you can learn
# by observing command output.

z_positions:
    -22, 189
    393, 189
points:
    28, 213 #-13, 158
    340, 213#337, 158
horizontal_move_z: 10
speed: 100
retries: 50
retry_tolerance: 0.01

[bed_screws]
screw1: 33,307
screw2: 333,47
screw3: 33,47
screw4: 333,307
 
[probe]
pin: EBBCan: PB8
x_offset: 2#-1.5
y_offset: -28 #19.75
#z_offset: 9.1 #7.45
speed: 5 #2.5
samples: 3
samples_result: median
sample_retract_dist: 1.0
samples_tolerance: 0.02
samples_tolerance_retries: 5

#[bltouch]
#sensor_pin: ^EBBCan:PB8
#control_pin: EBBCan:PB9
##sensor_pin: PB7
##control_pin: PB6
#stow_on_each_sample: False
#x_offset: 26
#y_offset: 22
##z_offset: 0
#speed: 6 #8#3.5
#samples: 2
#samples_tolerance: 0.025
#samples_tolerance_retries: 2
#samples_result: median

#probe_with_touch_mode: True
#pin_up_reports_not_triggered: True
#pin_up_touch_mode_reports_triggered: False

#[include K-ShakeTune/*.cfg]
[resonance_holder]

[exclude_object]

[shaketune]
# result_folder: ~/printer_data/config/ShakeTune_results
#    Path where the processed results will be stored. If the folder doesn't exist,
#    it will be automatically created. You can change this if you'd like to store 
#    results in a different location.
# number_of_results_to_keep: 10
#    This setting defines how many results you want to keep in the result folder.
#    Once the specified number is exceeded, older results will be automatically deleted
#    to free up space on the SD card and avoid cluttering the results folder.
# keep_raw_data: False
#    If set to True, Shake&Tune will store both the processed graphs and the raw accelerometer
#    .stdata files in the results folder. This can be useful for debugging or archiving purposes.
#    Please always attach them when reporting any issues on GitHub or Discord.
# show_macros_in_webui: True
#    Mainsail and Fluidd doesn't create buttons for system commands (macros that are not part
#    of the printer.cfg file). This option allow Shake&Tune to inject them into the webui at runtime.
#    If set to False, the macros will be hidden but still accessible from the console by typing
#    their names manually, which can be useful if you prefer to encapsulate them into your own macros.
# timeout: 600
#    This defines the maximum processing time (in seconds) to allows to Shake&Tune for generating 
#    graphs from a .stdata file. 10 minutes should be more than enough in most cases, but if you have
#    slower hardware (e.g., older SD cards or low-performance devices), increase it to prevent timeouts.
# measurements_chunk_size: 2
#    Each Shake&Tune command uses the accelerometer to take multiple measurements. By default,
#    Shake&Tune will write a chunk of data to disk every two measurements, and at the end of the
#    command will merge these chunks into the final .stdata file for processing. "2" is a very
#    conservative setting to avoid Klipper Timer Too Close errors on lower end devices with little
#    RAM, and should work for everyone. However, if you are using a powerful computer, you may
#    wish to increase this value to keep more measurements in memory (e.g., 15-20) before writing
#    the chunk and avoid stressing the filesystem too much.
# max_freq: 200
#    This setting defines the maximum frequency at which the calculation of the power spectral density
#    is cutoff. The default value should be fine for most machines and accelerometer combinations and
#    avoid touching it unless you know what you're doing.
# dpi: 300
#    Controls the resolution of the generated graphs. The default value of 300 dpi was optimized
#    and strikes a balance between performance and readability, ensuring that graphs are clear
#    without using too much RAM to generate them. Usually, you shouldn't need to change this value.

# printer.cfg

#[include timelapse.cfg]

#[gcode_macro START_PRINT]
#gcode:
# M106 S153
 #G28 ;Home
 #BED_MESH_PROFILE LOAD="default"
 #ztilt ;zAxisLevel
 #G1 X0 Y0 F12000
 #BED_MESH_CALIBRATE ;ABL
 #Accel ;SetAccelDecel
 #SQV ;SetSquareCornerVelocity
 #PRIME
 #M220 S100 ;Reset Feedrate
 #M221 S100 ;Reset Flowrate
	# Prime line sequence
#	G1 Z5 F3000 ; lift
#	G1 X20 Y5 F1500 ; move to prime position
#	G1 Z0.15 F3000 ; get ready to prime
#	G92 E0 ; reset extrusion distance
#	G1 X100 E30 F600 ; prime nozzle with adjusted extrusion / E__ based on how much you like
#	
	# String removal circle after priming
#	G1 Z0.2 F3000 ; adjust to 0.2mm above the bed
#	G1 Y15 F10000 ; move the toolhead in the Y direction by 15 units
	
	# Execute the circle 3 times
#	G2 I-5 J0 F10000 ; circle with 5mm radius
#	G2 I-5 J0 F10000
#	G2 I-5 J0 F10000
 # M220 S100 ;Reset Feedrate
  #M221 S100 ;Reset Flowrate

[force_move]
enable_force_move: True

[input_shaper]
shaper_freq_x: 59.6 # center frequency for the X axis filter
shaper_type_x: mzv # filter type for the X axis
shaper_freq_y: 37.6 # center frequency for the Y axis filter
shaper_type_y: mzv # filter type for the Y axis
damping_ratio_x: 0.051 # damping ratio for the X axis
damping_ratio_y: 0.064 # damping ratio for the Y axis

#[firmware_retraction]
#retract_length: 0.3#0.1 #0.3
#retract_speed: 30
#unretract_extra_length: 0
#unretract_speed: 30

[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[heater_fan my_nozzle_fan]
pin: PE5 #PA0
heater: extruder
heater_temp: 35
fan_speed: 1.0

#[safe_z_home]
#home_xy_position: 158.5, 160 #166, 160 #148.70, 160.50
#speed: 700
#z_hop: 5 # Move up 5mm, so the probe doesnt hit anything 
#z_hop_speed: 5 #8

#[bed_mesh] #BLTouch
#speed: 300
#horizontal_move_z: 5
#mesh_min: 22,24
#mesh_max: 347,348#338
#probe_count: 9,9
#algorithm: bicubic
##bicubic_tension: 0.2
#fade_start: 0.6
#fade_end: 10

[heater_bed]
heater_pin: PA1
sensor_pin: PF3 # TB
sensor_type: Generic 3950
#control: pid
#pid_Kp: 690.34
#pid_Ki: 111.47
#pid_Kd: 1068.83
min_temp: 0
max_temp: 120

#[idle_timeout]
#gcode:
#timeout: 1800

[fan]
pin: EBBCan: PA1

[controller_fan controller_fan]
pin: PA8
stepper: stepper_x, stepper_y, stepper_z
heater: extruder

[mcu EBBCan]
#serial: /dev/serial/by-id/usb-CanBoot_stm32f429xx_300035000D50304738313820-if00 #/dev/serial/by-id/usb-katapult_stm32f429xx_300035000D50304738313820-if00
canbus_uuid: 033fb9904007

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f429xx_300035000D50304738313820-if00 # /dev/serial/by-id/usb-Klipper_stm32f429xx_300035000D50304738313820-if00
#restart_method: command
#canbus_interface: can0
canbus_uuid: 2f3635f93355

########################################
# TMC-Autotune configuration
########################################

[autotune_tmc stepper_x]
motor: honeybadger-42hs48-25044a
tuning_goal: performance

[autotune_tmc stepper_y]
motor: honeybadger-42hs48-25044a
tuning_goal: performance

[autotune_tmc stepper_z]
motor: BJ42D15-26V19
tuning_goal: silent

[autotune_tmc stepper_z1]
motor: BJ42D15-26V19
tuning_goal: silent

[autotune_tmc extruder]
motor: ldo-36sth17-1004ahg
tuning_goal: silent

[motor_constants BJ42D15-26V19]
resistance: 6.0
inductance: 0.0088
holding_torque: 0.28
max_current: 0.84
steps_per_revolution: 200
#tuning_goal: auto


########################################
# TMC2209 configuration
########################################

[tmc2209 stepper_x]
uart_pin: PC4
##diag_pin: PG6
run_current: 1.41#1.13 #1.41
stealthchop_threshold: 0
interpolate: True #False

[tmc2209 stepper_y]
uart_pin: PD11
##diag_pin: PG9
run_current: 1.41
stealthchop_threshold: 0
interpolate: True #False

#[tmc2209 stepper_z0]
#uart_pin: PC6
##diag_pin: PG10
#run_current: 0.650
#stealthchop_threshold: 999999
#interpolate: False

[tmc2209 stepper_z]
uart_pin: PC6
##diag_pin: PG11
run_current: 0.800 #0.750
#stealthchop_threshold: 0
interpolate: True #False

[tmc2209 stepper_z1]
uart_pin: PC7
##diag_pin: PG11
run_current: 0.800 #0.750
stealthchop_threshold: 0
interpolate: True #False

[tmc2209 extruder]
interpolate: True #False
uart_pin: EBBCan: PA15
#uart_pin: PF2
#run_current: 0.800
#stealthchop_threshold: 999999
#Run current is listed in RMS
run_current: 0.30 #min current, equivalent to 0.42A peak (Peak = RMS/0.707)
#run_current: 0.35 #max current, equivalent to 0.49A peak (Peak = RMS/0.707)

#[tmc2209 extruder1]
#uart_pin: PE4
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder2]
#uart_pin: PE1
#run_current: 0.800
#stealthchop_threshold: 999999

#[tmc2209 extruder3]
#uart_pin: PD3
#run_current: 0.800
#stealthchop_threshold: 999999

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=PE8, EXP1_2=PE7,
    EXP1_3=PE9, EXP1_4=PE10,
    EXP1_5=PE12, EXP1_6=PE13,    # Slot in the socket on this side
    EXP1_7=PE14, EXP1_8=PE15,
    EXP1_9=<GND>, EXP1_10=<5V>,
    
    # EXP2 header
    EXP2_1=PA6, EXP2_2=PA5,
    EXP2_3=PB1, EXP2_4=PA4,
    EXP2_5=PB2, EXP2_6=PA7,      # Slot in the socket on this side
    EXP2_7=PC15, EXP2_8=<RST>,
    EXP2_9=<GND>, EXP2_10=PC5
    
    #[filament_switch_sensor filament_sensor]
    #switch_pin:PE4
    
[pause_resume]

[virtual_sdcard]
#path: ~/gcode_files
path: /home/pi/printer_data/gcodes

[display_status]

[respond]
default_type: echo



[mcu rpi]
serial: /tmp/klipper_host_mcu


[adxl345]
cs_pin: EBBCan: PB12 #rpi:None 
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
#axes_map: -z,-x,-y #x,z,y

[resonance_tester]
max_freq: 133.33
accel_chip: adxl345
accel_per_hz: 75
probe_points:
    176.7, 166.5, 2 #181.5, 206, 5#181, 5  # an example

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 23.108
#*# pid_ki = 2.027
#*# pid_kd = 65.858
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 59.484
#*# pid_ki = 1.586
#*# pid_kd = 557.664
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	-0.025625, -0.023125, -0.007500, -0.020625, 0.005000
#*# 	0.008750, 0.008125, 0.018750, 0.018750, 0.023125
#*# 	0.028125, 0.015625, 0.013750, 0.014375, 0.016875
#*# 	0.031250, 0.044375, 0.033125, 0.015625, 0.026875
#*# 	0.030625, 0.008750, 0.015625, -0.011875, 0.008125
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = lagrange
#*# tension = 0.2
#*# min_x = 28.0
#*# max_x = 340.0
#*# min_y = 28.0
#*# max_y = 310.0
#*#
#*# [probe]
#*# z_offset = 8.900
